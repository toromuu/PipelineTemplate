version: "3"
services:
  vscoderemote:
    build:
      context: ./app-workspace/.devcontainer
    container_name: VScodeDevRemoteContainer
    ports:     
      - "3000:3000"
    volumes:
      - ./app-workspace/.:/workspace/
    tty: true
    networks:
      - pipeNet

  jenkins:
    build:
      context: ./jenkins
    container_name: jenkins
    privileged: true
    user: root
    networks:
        - pipeNet
    volumes:
      - ./volumes/jenkins/jenkins_home:/var/jenkins_home
      - ./jenkins/jenkins_as_code/conf:/var/jenkins_conf
      - ./app-workspace:/var/lib/jenkins/repo
      - ./jenkins/jenkins_as_code/jobs/:/var/jenkins_home/jobs/
      - ./jenkins/jenkins_as_code/ansible_cfg/:/etc/ansible/
    ports:
      - "8000:8080"
    environment:
      - CASC_JENKINS_CONFIG=/var/jenkins_conf

  sonarqube:
    build:
        context: ./sonarqube
    container_name: sonarqube
    expose:
      - 9000
    ports:
      - "9000:9000"
    networks:
      - pipeNet
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - ./volumes/sonarqube/sonarqube_conff:/opt/sonarqube/conf
      - ./volumes/sonarqube/sonarqube_dataa:/opt/sonarqube/data
      - ./volumes/sonarqube/sonarqube_extensionss:/opt/sonarqube/extensions
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  db:
    image: postgres
    container_name: postgre
    networks:
      - pipeNet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - ./volumes/postgre/postgresqll:/var/lib/postgresql
      - ./volumes/postgre//postgresql_dataa:/var/lib/postgresql/data

networks:
  pipeNet:
      driver: bridge
  
